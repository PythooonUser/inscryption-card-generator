name: build+deploy

on:
  push:
    branches:
    - main

jobs:
  main:
    env:
      SERVER_IP: ${{ secrets.SERVER_IP }}
      SERVER_KEYSCAN: ${{ secrets.SERVER_KEYSCAN }}
    runs-on: ubuntu-latest
    steps:
    - name: checkout code
      uses: actions/checkout@v2
    - name: install node
      uses: actions/setup-node@v1
      with:
        node-version: '17.x'
    - name: install dependencies
      run: yarn install --frozen-lockfile
    - name: test
      run: yarn jest
    - name: build & bundle
      run: yarn build
    - name: extract resources
      env:
        ENCRYPTION_PASSWORD: ${{ secrets.ENCRYPTION_PASSWORD }}
      run: echo "$ENCRYPTION_PASSWORD" | gpg --batch --quiet --passphrase-fd 0 -d resources.tar.gz.gpg | tar -xz
    - name: build docker image
      run: docker build . --file Dockerfile --tag inscryption-card-generator:ci
    
    - name: run docker image
      run: docker run --rm -d -p 8080:8080 inscryption-card-generator:ci
    - name: (test) install nginx and proxy_pass 80:8080
      run: sudo apt install nginx && echo "server { listen 80; location / { proxy_pass http://127.0.0.1:8080; } }" > /etc/nginx/sites-enabled/host.conf && service nginx start
    - name: wait for server to start (guess)
      run: sleep 10
    - name: validate server running
      run: if [ $(curl -s -o /dev/null -w '%{http_code}' localhost) != 200 ]; then exit 1; fi
    - name: check generate act 1 card
      run: if [ $(curl -s -o /dev/null -w '%{http_code}' -d '{}' -X POST localhost/api/card/leshy/) != 201 ]; then exit 1; fi
    - name: stop all container
      run: docker stop $(docker ps -a -q)
    - name: export docker image
      run: docker save inscryption-card-generator > inscryption-card-generator.tar
    - name: compress image
      run: gzip inscryption-card-generator.tar

    - name: init ssh agent
      uses: webfactory/ssh-agent@v0.5.4
      with:
        ssh-private-key: ${{ secrets.SSH_KEY }}
    - name: add server to known hosts
      run: echo "$SERVER_IP ssh-rsa $SERVER_KEYSCAN" >> ~/.ssh/known_hosts
    - name: upload artifact
      run: scp inscryption-card-generator.tar.gz "ci@$SERVER_IP:/home/ci/"
    - name: remove previous image
      run: |
        ssh ci@$SERVER_IP 'docker stop $(docker ps -a -q) || echo "No container running. Skipping..."'
        ssh ci@$SERVER_IP "docker image rm inscryption-card-generator || echo 'No previous image exists. Skipping...'"
    - name: import container and remove artifact
      run: ssh ci@$SERVER_IP "cd /home/ci/ && gzip -d inscryption-card-generator.tar.gz && docker load -i inscryption-card-generator.tar && rm inscryption-card-generator.tar"
    - name: run container
      run: ssh ci@$SERVER_IP "docker run --rm -d -p 8080:8080 inscryption-card-generator:ci"
