name: build+deploy

on:
  push:
    branches:
    - feature/ci

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      ENCRYPTION_PASSWORD: ${{ secrets.ENCRYPTION_PASSWORD }}
    steps:
    - name: checkout code
      uses: actions/checkout@v2
    - name: install node
      uses: actions/setup-node@v1
      with:
        node-version: '17.x'
    - name: install dependencies
      run: yarn install --frozen-lockfile
    - name: build & bundle
      run: yarn build
    - name: extract resources
      run: echo "$ENCRYPTION_PASSWORD" | gpg --batch --quiet --passphrase-fd 0 -d resources.tar.gz.gpg | tar -xz
    - name: build docker image
      run: docker build . --file Dockerfile --tag inscryption-card-generator:ci
    - name: run docker image
      run: docker run --rm -d -p 8080:8080 inscryption-card-generator:ci
    - name: wait for server to start (guess)
      run: sleep 10
    - name: validate server running
      run: if [ $(curl localhost:8080) != 200 ]; then exit 1; fi
    - name: check generate act 1 card
      run: if [ $(curl -s -o /dev/null -w '%{http_code}' -d '{}' -X POST localhost:8080/api/card/leshy/) != 201 ]; then exit 1; fi
       
    - name: stop all container
      run: docker stop $(docker ps -a -q)

# todo: for later
# - name: export docker image
#   run: docker save inscryption-card-generator > inscryption-card-generator.tar
# - name: compress image
#   run: gzip inscryption-card-generator.tar
#
# - name: decompress image
#   run: gzip -d inscryption-card-generator.tar.gz
# - name: load docker image
#   run: docker load -i inscryption-card-generator.tar
